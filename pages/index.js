import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react';
import { ethers } from 'ethers';

export default function Home() {

  const [ clientAddress, setClientAddress ] = useState("");
  const [ connected, setConnected ] = useState("connect wallet");
  const [businessCardAddress, setBusinessCardAddress] = useState("");
  const [displayBtn, setDisplayBtn] = useState("");
  const [displayAddress, setDisplayAddress] = useState("hidden");

  useEffect(() => {
      if(clientAddress) {
        setConnected("connected");
      }
      if(businessCardAddress) {
        setDisplayBtn("hidden");
        setDisplayAddress("");
      }
  }, [clientAddress, businessCardAddress])

  const connect = async () => {
      if (typeof window.ethereum !== 'undefined') {
        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
        setClientAddress(accounts[0]);
      }
    }

  const abi = [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "Created",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "businessOwnersContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "contract ZampsToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ]

  //Zamps Contract address
  const zampsContractAddress = "0xD6863BDab59E03cB971Ba4342619301f98c66AEA";
      
  const generate = async () => {
    const provider = new ethers.providers.Web3Provider(window.ethereum)
    const signer = provider.getSigner();
    const contract = new ethers.Contract(zampsContractAddress, abi, signer);

    const response = await contract.create(clientAddress);
    response.wait(1);
   
    checkEvents();
  }

  const checkEvents = () => {
    const provider = new ethers.providers.Web3Provider(window.ethereum)
    const contract = new ethers.Contract(zampsContractAddress, abi, provider);
    contract.on("Created", (_tokenAddress) => {
      setBusinessCardAddress(JSON.stringify(_tokenAddress));
    })
  }

  

  return (
    <div
    className='bg-gray-900 h-screen'
    >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
      className="flex justify-between px-28 items-center pt-6"
      >
      <h1
      className='text-white text-4xl'>
      Zamps</h1>
      <div
      className="text-white flex items-center"
      >
        <a
        className="px-5"
        ><p>dashboard</p></a>
        <a
        className="px-5"
        ><p>about</p></a>
        <a
         className="px-5"
        ><p
        onClick={connect}
        className="px-5 py-2 bg-yellow-500 rounded-md"
        >{connected}</p></a>
      </div>
    </div>
    <section>
      <div
      className="px-28 flex justify-between"
      >
        <div
        className="pt-28 pl-40 flex flex-col"
        >
          <h1
          className='font-extrabold text-white text-5xl'
          >Client Sourced</h1>
          <h1
          className='font-extrabold text-white text-5xl'
          >Marketing</h1>
          <p
          className="text-white text-2xl py-5"          
          >Business Marketing Reinvented!!</p>
          <p
          className="text-white"
          >A referral marketing network,</p>
          <p
          className="text-white"
          >where everyone wins...</p>
        </div>
        <div
        className='pt-28 pr-40'
        >
           <Image 
          className=''
          src="/1.png" height={200} width={400} />
          <button
          onClick={generate}
          className={`bg-yellow-500 p-3 w-[400px] rounded-md mt-5 ${displayBtn}`}
          >Generate</button>
          <div
          className={`${displayAddress} pt-3 text-white`}
          >
            <h3>
              Business Card Contract Address
            </h3>
            <p>{businessCardAddress}</p>
          </div>
        </div>
      </div>
    </section>
    </div>
  )
}
